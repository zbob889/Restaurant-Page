(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),r=t.n(a),o=t(645),i=t.n(o)()(r());i.push([n.id,"* {\n    padding: 0;\n    margin: 0;\n    font-family: 'Roboto';\n}\n\n:root {\n    --main-teal: #5b7ca7;\n    --main-gold: #db9941;\n    --main-tan: #dbc197;\n    --main-purple: #985a71;\n    --main-green: #8dae87;\n}\n\n#container {\n    display: grid;\n    grid-template: 1fr 15fr 1fr / 1fr;\n    width: 100%;\n    height: 100vh;\n}\n\n#header {\n    grid-area: 1 / 1 / 2 / 2;\n    background-color: var(--main-teal);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    padding: 8px;\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, .25);\n}\n\n.button {\n    flex: 1;\n    max-width: 100px;\n    height: 100%;\n    border-radius: 10px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.25) ;\n    background-color: var(--main-gold);\n    transition: .2s;\n}\n\n.button:hover {\n    background-color: #e6a146;\n    transform: scale(1.02);\n}\n\n#content {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: var(--main-green);\n    z-index: -1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#holishkes {\n    height: 300px;\n    max-width: 100%;\n}\n\n.card {\n    flex: 1;\n    width: 50vw;\n    min-width: 200px;\n    background-color: var(--main-purple);\n    margin-top: 16px;\n    margin-bottom: 16px;\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\n#homeContainer {\n    display: grid;\n    grid-template: 1fr 4fr / 1fr;\n}\n\n#restaurantName {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Dancing Script';\n    font-size: 40px;\n    font-weight: bold;\n}\n\n#restaurantInfo {\n    display: flex;\n    justify-content: center;\n    padding: 45px 26px 26px 26px;\n    font-size: 24px;\n    line-height: 2;\n}\n\n#menuContainer {\n    display: grid;\n    grid-template: repeat(13, 1fr)/ 5fr 1fr;\n    padding-left: 24px;\n}\n\n#menuTitle {\n    grid-area: 1 / 1 / 3 / 3;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Dancing Script';\n    font-size: 40px;\n}\n\n.menuText {\n    font-size: 20px;\n}\n\n#footer { \n    grid-area: 3 / 1 / 4 / 2;\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    font-size: 12px;\n    background-color: var(--main-teal);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 15px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,oBAAoB;IACpB,oBAAoB;IACpB,mBAAmB;IACnB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,wBAAwB;IACxB,kCAAkC;IAClC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,YAAY;IACZ,8CAA8C;AAClD;;AAEA;IACI,OAAO;IACP,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,gDAAgD;IAChD,kCAAkC;IAClC,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;IACxB,mCAAmC;IACnC,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,OAAO;IACP,WAAW;IACX,gBAAgB;IAChB,oCAAoC;IACpC,gBAAgB;IAChB,mBAAmB;IACnB,kBAAkB;IAClB,4CAA4C;AAChD;;AAEA;IACI,aAAa;IACb,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,6BAA6B;IAC7B,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,4BAA4B;IAC5B,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,kBAAkB;AACtB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,kCAAkC;IAClC,4CAA4C;AAChD",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n    font-family: 'Roboto';\n}\n\n:root {\n    --main-teal: #5b7ca7;\n    --main-gold: #db9941;\n    --main-tan: #dbc197;\n    --main-purple: #985a71;\n    --main-green: #8dae87;\n}\n\n#container {\n    display: grid;\n    grid-template: 1fr 15fr 1fr / 1fr;\n    width: 100%;\n    height: 100vh;\n}\n\n#header {\n    grid-area: 1 / 1 / 2 / 2;\n    background-color: var(--main-teal);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    padding: 8px;\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, .25);\n}\n\n.button {\n    flex: 1;\n    max-width: 100px;\n    height: 100%;\n    border-radius: 10px;\n    border: none;\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.25) ;\n    background-color: var(--main-gold);\n    transition: .2s;\n}\n\n.button:hover {\n    background-color: #e6a146;\n    transform: scale(1.02);\n}\n\n#content {\n    grid-area: 2 / 1 / 3 / 2;\n    background-color: var(--main-green);\n    z-index: -1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#holishkes {\n    height: 300px;\n    max-width: 100%;\n}\n\n.card {\n    flex: 1;\n    width: 50vw;\n    min-width: 200px;\n    background-color: var(--main-purple);\n    margin-top: 16px;\n    margin-bottom: 16px;\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n\n#homeContainer {\n    display: grid;\n    grid-template: 1fr 4fr / 1fr;\n}\n\n#restaurantName {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Dancing Script';\n    font-size: 40px;\n    font-weight: bold;\n}\n\n#restaurantInfo {\n    display: flex;\n    justify-content: center;\n    padding: 45px 26px 26px 26px;\n    font-size: 24px;\n    line-height: 2;\n}\n\n#menuContainer {\n    display: grid;\n    grid-template: repeat(13, 1fr)/ 5fr 1fr;\n    padding-left: 24px;\n}\n\n#menuTitle {\n    grid-area: 1 / 1 / 3 / 3;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Dancing Script';\n    font-size: 40px;\n}\n\n.menuText {\n    font-size: 20px;\n}\n\n#footer { \n    grid-area: 3 / 1 / 4 / 2;\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    font-size: 12px;\n    background-color: var(--main-teal);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 15px;\n}"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);a&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],A=0;A<n.length;A++){var c=n[A],s=a.base?c[0]+a.base:c[0],d=o[s]||0,p="".concat(s," ").concat(d);o[s]=d+1;var l=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=r(u,a);a.byIndex=A,e.splice(A,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=t(o[i]);e[A].references--}for(var c=a(n,r),s=0;s<o.length;s++){var d=t(o[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),r=t.n(a),o=t(569),i=t.n(o),A=t(565),c=t.n(A),s=t(216),d=t.n(s),p=t(589),l=t.n(p),u=t(426),m={};function f(n,e,t,a){let r=document.createElement(`${n}`);r.className=`${e}`,r.setAttribute("id",`${t}`),document.getElementById(`${a}`).appendChild(r)}function C(n,e){document.getElementById(`${n}`).innerHTML=`${e}`}function g(){f("div","card","homeContainer","content"),f("p","","restaurantName","homeContainer"),C("restaurantName","Claudia's Nosh"),f("p","","restaurantInfo","homeContainer"),C("restaurantInfo","Claudia's Nosh is a Surinamese-Ashkenazi restaraunt.  A place for kindlech and Suriname-mofo alike!  Whether you want your Bubbe's kugel or your Granmama's braune bohnen, we've got it!")}function x(n){let e=document.createElement("p");e.className="menuText",document.getElementById("menuContainer").appendChild(e),e.innerHTML=`${n}`}m.styleTagTransform=l(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,f("div","","header","container"),f("button","button","home","header"),C("home","Home"),f("button","button","menu","header"),C("menu","Menu"),f("button","button","contact","header"),C("contact","Contact"),f("div","","content","container"),f("div","","footer","container"),f("p","","footerText","footer"),C("footerText","Made by Impressive Turt"),g();let B=document.getElementById("home"),h=document.getElementById("menu"),I=document.getElementById("contact");B.addEventListener("click",(()=>{C("content",""),g()})),h.addEventListener("click",(()=>{C("content",""),f("div","card","menuContainer","content"),f("p","","menuTitle","menuContainer"),C("menuTitle","Menu"),f("div","","","menuContainer"),f("div","","","menuContainer"),x("Braune Bohen met Rijs"),x("€5"),x("Saoto"),x("€8"),x("Three Pasteitjes"),x("€5"),x("Broodje Bacalao"),x("€5"),x("Lokshen Kugel"),x("€5"),x("Chicken Soup with Kneidlach"),x("€8"),x("Holishkes"),x("€8"),x("Cholent"),x("€8")})),I.addEventListener("click",(()=>{C("content","")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,